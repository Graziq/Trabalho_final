name: Deploy Prefect Flows

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: windows-latest

    steps:
      - name: üîÅ Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: üêç Instalar Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: üì¶ Instalar depend√™ncias
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt
          python -m pip install "prefect==2.16.4"
          
          # Configura PYTHONPATH para Windows (PowerShell)
          # Isso √© crucial para que o Prefect encontre os m√≥dulos dentro de 'src'
          $env:PYTHONPATH="$env:PYTHONPATH;$(Get-Location)\src"
        shell: powershell

      - name: üîó Configurar conex√£o com Prefect Server remoto
        run: |
          # Define a URL da API do seu Prefect Server usando um secret do GitHub
          prefect config set PREFECT_API_URL="${{ secrets.PREFECT_SERVER_URL }}/api"
          Write-Host "URL da API do Prefect configurada."
          prefect profile ls # Opcional: Para verificar o perfil ativo
        shell: powershell

      - name: üöÄ Deploy dos Flows (Usando -n, conforme sua indica√ß√£o)
        run: |
          $max_retries = 5
          $retry_delay_seconds = 5
          
          # Lista dos nomes das deployments a serem atualizadas.
          # A sintaxe 'prefect deploy -n <nome_da_deployment>' implica que o Prefect
          # conseguir√° encontrar o flow correspondente no ambiente atual (diret√≥rios, PYTHONPATH).
          # Isso √© o que voc√™ indicou que funciona para voc√™.
          $deployments_to_update = @(
              "simulacao-e-visualizacao-orchestrator-deployment",
              "simulacao-contingencia-flow/deploy-flow"
          )

          foreach ($deployment_name in $deployments_to_update) {
            $attempt = 0
            $success = $false
            Write-Host "Iniciando deploy para a deployment: $($deployment_name)..."

            while ($attempt -lt $max_retries -and -not $success) {
              $attempt++
              Write-Host "Tentativa $($attempt) de $($max_retries) para o deploy de $($deployment_name)..."
              
              # Executa o deploy usando a sintaxe -n
              # Este comando atualizar√° a deployment existente com o c√≥digo mais recente
              # presumindo que o Prefect possa encontrar o flow no PYTHONPATH configurado.
              prefect deploy -n "$($deployment_name)"
              
              if ($LASTEXITCODE -eq 0) {
                Write-Host "‚úÖ Deploy de $($deployment_name) realizado com sucesso!"
                $success = $true
              } else {
                Write-Host "‚ùå Deploy de $($deployment_name) falhou. Aguardando $($retry_delay_seconds) segundos antes de tentar novamente..."
                Write-Host "Erro detalhado (c√≥digo de sa√≠da): $LASTEXITCODE"
                Start-Sleep -Seconds $retry_delay_seconds
              }
            }

            if (-not $success) {
              Write-Error "O deploy da deployment $($deployment_name) falhou ap√≥s $($max_retries) tentativas."
              exit 1 # For√ßa a falha do passo no GitHub Actios
            }
          }

        shell: powershell
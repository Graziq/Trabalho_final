name: Deploy Prefect Flows # Nome do workflow, vis√≠vel no GitHub Actions

on:
  push: # Este workflow ser√° acionado quando houver um push
    branches:
      - main # Apenas na branch 'main'

jobs:
  deploy: # Defini√ß√£o do job 'deploy'
    runs-on: windows-latest # O job ser√° executado em um runner Windows (latest version)

    steps: # Sequ√™ncia de passos a serem executados
      - name: üîÅ Checkout do c√≥digo # Nome do passo
        uses: actions/checkout@v3 # Utiliza a action oficial para fazer o checkout do seu reposit√≥rio

      - name: üêç Instalar Python 3.10 # Nome do passo
        uses: actions/setup-python@v4 # Utiliza a action oficial para configurar o Python
        with:
          python-version: "3.10" # Especifica a vers√£o do Python a ser instalada

      - name: üì¶ Instalar depend√™ncias # Nome do passo
        # O comando 'run' executa comandos de shell
        run: |
          python -m pip install -U pip # Atualiza o pip para a vers√£o mais recente
          python -m pip install -r requirements.txt # Instala as depend√™ncias listadas no requirements.txt
          python -m pip install "prefect==2.16.4" # Instala uma vers√£o espec√≠fica do Prefect
          
          # Configura PYTHONPATH para Windows (PowerShell)
          # Isso √© crucial para que o Prefect encontre os m√≥dulos dentro de 'src'
          # Adiciona o diret√≥rio 'src' ao PYTHONPATH, garantindo que m√≥dulos Python dentro dele sejam encontrados.
          $env:PYTHONPATH="$env:PYTHONPATH;$(Get-Location)\src"
        shell: powershell # Define o shell para este passo como PowerShell

      - name: üîó Configurar conex√£o com Prefect Server remoto # Nome do passo
        run: |
          # Define a URL da API do seu Prefect Server usando um secret do GitHub
          # O secret `PREFECT_SERVER_URL` deve ser configurado nas configura√ß√µes do seu reposit√≥rio no GitHub.
          # Isso garante que a URL do servidor Prefect n√£o seja exposta no seu c√≥digo.
          prefect config set PREFECT_API_URL="${{ secrets.PREFECT_SERVER_URL }}/api"
          Write-Host "URL da API do Prefect configurada." # Exibe uma mensagem no log do GitHub Actions
          prefect profile ls # Opcional: Para verificar o perfil ativo do Prefect (√∫til para depura√ß√£o)
        shell: powershell # Define o shell para este passo como PowerShell

      - name: üöÄ Deploy do Flow com retry # Nome do passo
        # **CORRE√á√ÉO AQUI:** Sintaxe do loop for para PowerShell
        run: |
          # Loop for em PowerShell: para tentar o deploy 5 vezes
          # Se o deploy for bem-sucedido, o loop pode ser quebrado para evitar retries desnecess√°rios.
          for ($i = 1; $i -le 5; $i++) {
            Write-Host "Tentativa $i de 5 para deploy do flow..."
            # Execute o comando de deploy do Prefect.
            # Certifique-se de que 'simulacao-e-visualizacao-orchestrator-deployment'
            # aponta para um arquivo de configura√ß√£o `prefect.yaml` ou similar
            # que est√° acess√≠vel no diret√≥rio de trabalho.
            prefect deploy -n simulacao-e-visualizacao-orchestrator-deployment
            
            # Adiciona uma pausa entre as tentativas (opcional, mas recomendado para retries)
            Start-Sleep -Seconds 5 # Pausa por 5 segundos
          }
        shell: powershell # Define o shell para este passo como PowerShell

name: Run Local Python Code

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run_code: # Nome do job
    runs-on: windows-latest

    # Configura√ß√£o de servi√ßos de banco de dados PostgreSQL
    services:
      postgres:
        image: postgres:13.11
        env: # Vari√°veis de ambiente para o cont√™iner do PostgreSQL
          POSTGRES_DB: postgres-1
          POSTGRES_USER: prefect
          POSTGRES_PASSWORD: prefect
        ports:
          - 5432:5432 # Mapeia a porta do cont√™iner para a porta do host (opcional, mas boa pr√°tica)
        options: >- # Op√ß√µes extras para o comando 'docker run'
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps: # Sequ√™ncia de passos
      - name: üîÅ Checkout do c√≥digo # Passo para baixar seu c√≥digo
        uses: actions/checkout@v3

      - name: üêç Instalar Python 3.10 # Passo para configurar o ambiente Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: üì¶ Instalar depend√™ncias # Instala as bibliotecas Python necess√°rias
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt
          # Certifique-se de instalar o driver do banco de dados, por exemplo, psycopg2 para PostgreSQL
          python -m pip install psycopg2-binary
          # Remova 'prefect==2.16.4' se voc√™ n√£o o usa mais no seu c√≥digo Python
          # ou se ele n√£o √© uma depend√™ncia direta do c√≥digo que voc√™ quer rodar localmente.
          # python -m pip install "prefect==2.16.4" 
          
          # Configura PYTHONPATH para Windows (PowerShell)
          # Isso √© crucial para que os m√≥dulos Python em 'src' sejam encontrados.
          $env:PYTHONPATH="$env:PYTHONPATH;$(Get-Location)\src"
        shell: powershell

      - name: üèÉ Executar C√≥digo Python Localmente # Executa seu script Python
        env: # Vari√°veis de ambiente para o script se conectar ao banco de dados
          PGHOST: postgres
          PGPORT: 5432
          PGUSER: test_user
          PGPASSWORD: test_password
          PGDATABASE: test_db
        run: |
          Write-Host "Tentando executar o c√≥digo Python localmente..."
          Write-Host "Vari√°veis de ambiente do BD configuradas para o script."
          
          python src/flows/resultados2.py
          
          # Captura o c√≥digo de sa√≠da do script Python.
          $scriptExitCode = $LASTEXITCODE
          
          if ($scriptExitCode -eq 0) {
            Write-Host "Execu√ß√£o do c√≥digo Python bem-sucedida!"
          } else {
            # Se o script n√£o executou com sucesso, levanta um erro no workflow.
            throw "A execu√ß√£o do c√≥digo Python falhou com c√≥digo de sa√≠da: $scriptExitCode"
          }
        shell: powershell
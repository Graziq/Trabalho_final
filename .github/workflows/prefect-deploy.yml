name: Deploy Prefect Flows

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: windows-latest

    steps:
      - name: üîÅ Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: üêç Instalar Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: üì¶ Instalar depend√™ncias
        run: |
          python -m pip install -U pip
          # Garanta que todas as depend√™ncias do seu projeto (pandapower, pandas, etc.)
          # estejam listadas no seu 'requirements.txt' na raiz do seu reposit√≥rio.
          # O 'griffe' j√° deve estar aqui.
          python -m pip install -r requirements.txt
          python -m pip install "prefect==2.16.4" # Garante a vers√£o espec√≠fica do Prefect
          
          # Configura PYTHONPATH para Windows (PowerShell)
          $env:PYTHONPATH="$env:PYTHONPATH;$(Get-Location)\src"
        shell: powershell

      - name: üîó Configurar conex√£o com Prefect Server remoto
        run: |
          prefect config set PREFECT_API_URL="${{ secrets.PREFECT_SERVER_URL }}/api"
          Write-Host "URL da API do Prefect configurada."
          prefect profile ls # Opcional: Para verificar o perfil ativo
        shell: powershell

      - name: üöÄ Deploy dos Flows
        run: |
          $max_retries = 5
          $retry_delay_seconds = 5
          
          $deployments_to_update = @(
              @{ Name = "simulacao-e-visualizacao-orchestrator-deployment"; Path = "src/flows/orchestrator_flow.py" },
              @{ Name = "simulacao-contingencia-flow/deploy-flow"; Path = "src/flows/resultados2.py" }
          )

          foreach ($deployment in $deployments_to_update) {
            $attempt = 0
            $success = $false
            Write-Host "Iniciando deploy para $($deployment.Name) a partir de $($deployment.Path)..."

            while ($attempt -lt $max_retries -and -not $success) {
              $attempt++
              Write-Host "Tentativa $($attempt) de $($max_retries) para o deploy de $($deployment.Name)..."
              
              prefect deploy --name "$($deployment.Name)" --path "$($deployment.Path)"
              
              if ($LASTEXITCODE -eq 0) {
                Write-Host "‚úÖ Deploy de $($deployment.Name) realizado com sucesso!"
                $success = $true
              } else {
                Write-Host "‚ùå Deploy de $($deployment.Name) falhou. Aguardando $($retry_delay_seconds) segundos antes de tentar novamente..."
                Start-Sleep -Seconds $retry_delay_seconds
              }
            }

            if (-not $success) {
              Write-Error "O deploy de $($deployment.Name) falhou ap√≥s $($max_retries) tentativas."
              exit 1 # For√ßa a falha do passo no GitHub Actions
            }
          }
        shell: powershell